name: Slack Notify
description: Sends formatted Slack deployment messages

inputs:
  status:
    required: true
    description: 'Deployment status: start | success | failure'
  service:
    required: true
    description: 'Name of the deployed service'
  environment:
    required: true
    description: 'Target environment (e.g., dev, uat, prod)'
  slack_webhook:
    required: true
    description: 'Slack Incoming Webhook URL'

runs:
  using: "composite"
  steps:
    - name: Extract commit metadata
      id: meta
      shell: bash
      run: |
        git fetch --no-tags --prune --unshallow || git fetch --all
    
        SHORT_SHA=$(echo "$GITHUB_SHA" | cut -c1-7)
        COMMIT_MSG=$(git log -1 --pretty=%s)
        COMMIT_URL="${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/commit/${GITHUB_SHA}"
        BEFORE_SHA=$(jq -r .before "$GITHUB_EVENT_PATH")
        COMPARE_URL="${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/compare/${BEFORE_SHA}...${GITHUB_SHA}"
        COMMIT_COUNT=$(git rev-list --count "${BEFORE_SHA}..${GITHUB_SHA}")
        BRANCH_URL="${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/tree/${GITHUB_REF_NAME}"
        AUTHOR_URL="${GITHUB_SERVER_URL}/${GITHUB_ACTOR}"
    
        echo "SHORT_SHA=$SHORT_SHA" >> $GITHUB_ENV
        echo "COMMIT_MSG=$COMMIT_MSG" >> $GITHUB_ENV
        echo "COMMIT_URL=$COMMIT_URL" >> $GITHUB_ENV
        echo "COMPARE_URL=$COMPARE_URL" >> $GITHUB_ENV
        echo "COMMIT_COUNT=$COMMIT_COUNT" >> $GITHUB_ENV
        echo "BRANCH_URL=$BRANCH_URL" >> $GITHUB_ENV
        echo "AUTHOR_URL=$AUTHOR_URL" >> $GITHUB_ENV

    - name: Send Slack Notification
      shell: bash
      run: |
        if [ "${{ inputs.status }}" = "start" ]; then
          MESSAGE="<${COMPARE_URL}|${COMMIT_COUNT} new commit> pushed to <${BRANCH_URL}|${GITHUB_REF_NAME}> by <${AUTHOR_URL}|${GITHUB_ACTOR}>\n   <${COMMIT_URL}|${SHORT_SHA}> – ${COMMIT_MSG}\n   ${GITHUB_REPOSITORY}\n   Deployment started for ${{ inputs.service }} (${{ inputs.environment }})"
        elif [ "${{ inputs.status }}" = "success" ]; then
          MESSAGE="\n   <${COMMIT_URL}|${SHORT_SHA}> – ${COMMIT_MSG}\n   Deployment *succeeded* for ${{ inputs.service }} (${{ inputs.environment }})\n   ${GITHUB_REPOSITORY}"
        elif [ "${{ inputs.status }}" = "failure" ]; then
          MESSAGE="\n   <${COMMIT_URL}|${SHORT_SHA}> – ${COMMIT_MSG}\n   ❌ Deployment *failed* for ${{ inputs.service }} (${{ inputs.environment }})\n   ${GITHUB_REPOSITORY}"
        else
          echo "Invalid status"; exit 1
        fi

        curl -X POST -H 'Content-type: application/json' \
             --data "{\"text\": \"$MESSAGE\"}" \
             ${{ inputs.slack_webhook }}
