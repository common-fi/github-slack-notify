name: Slack Notify
description: Sends formatted Slack deployment messages

inputs:
  status:
    required: true
    description: 'Deployment status: start | success | failure'
  service:
    required: true
    description: 'Name of the deployed service'
  environment:
    required: true
    description: 'Target environment (e.g., dev, uat, prod)'
  slack_webhook:
    required: true
    description: 'Slack Incoming Webhook URL'

runs:
  using: "composite"
  steps:
    - name: Extract commit metadata
      id: meta
      shell: bash
      run: |
        echo "SHORT_SHA=$(echo $GITHUB_SHA | cut -c1-7)" >> $GITHUB_ENV
        echo "COMMIT_MSG=$(git log -1 --pretty=%s)" >> $GITHUB_ENV
        echo "COMMIT_URL=${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/commit/${GITHUB_SHA}" >> $GITHUB_ENV
        echo "COMMIT_COUNT=$(git rev-list --count ${GITHUB_EVENT_BEFORE}..${GITHUB_SHA})" >> $GITHUB_ENV

    - name: Send Slack Notification
      shell: bash
      run: |
        if [ "${{ inputs.status }}" = "start" ]; then
          MESSAGE="${COMMIT_COUNT} new commit pushed to *${GITHUB_REF_NAME}* by *${GITHUB_ACTOR}*\n<${COMMIT_URL}|${SHORT_SHA}> - ${COMMIT_MSG}\n${GITHUB_REPOSITORY}\nDeployment started for ${{ inputs.service }} (*${{ inputs.environment }}*)"
        elif [ "${{ inputs.status }}" = "success" ]; then
          MESSAGE="<${COMMIT_URL}|${SHORT_SHA}> - ${COMMIT_MSG}\nDeployment *succeeded* for ${{ inputs.service }} (*${{ inputs.environment }}*)\n${GITHUB_REPOSITORY}"
        elif [ "${{ inputs.status }}" = "failure" ]; then
          MESSAGE="<${COMMIT_URL}|${SHORT_SHA}> - ${COMMIT_MSG}\n‚ùå Deployment *failed* for ${{ inputs.service }} (*${{ inputs.environment }}*)\n${GITHUB_REPOSITORY}"
        else
          echo "Invalid status"; exit 1
        fi

        curl -X POST -H 'Content-type: application/json' --data "{\"text\": \"$MESSAGE\"}" ${{ inputs.slack_webhook }}
